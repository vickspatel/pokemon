{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vikas\\\\webstorm\\\\pokeapi-carousel\\\\src\\\\Carousel.js\";\nimport React, { Component } from 'react';\nimport { Pokemon } from './Pokemon';\nexport class Carousel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.prevSlide = () => {\n      // find the index of the last image in the array\n      const lastIndex = this.state.items.length - 1; // check if we need to start over from the last index again\n\n      const resetIndex = this.state.currentItemIndex === 0;\n      const index = resetIndex ? lastIndex : this.state.currentItemIndex - 3; // assign the logical index to currentItemIndex that will use in render method\n\n      this.setState({\n        currentItemIndex: index\n      });\n    };\n\n    this.nextSlide = () => {\n      // find the index of the last image in the array\n      const lastIndex = this.state.pokemonList.length - 1; // check if we need to start over from the first index\n\n      const resetIndex = this.state.currentItemIndex === lastIndex;\n      const index = resetIndex ? 0 : this.state.currentItemIndex + 3; // assign the logical index to currentItemIndex that will use in render method\n\n      this.setState({\n        currentItemIndex: index\n      });\n    };\n\n    this.state = {\n      currentItemIndex: 0,\n      pokemonList: [],\n      fetched: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=51').then(res => res.json()).then(response => {\n      this.setState({\n        pokemonList: response.results,\n        loading: true,\n        fetched: true\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          fetched = _this$state.fetched,\n          loading = _this$state.loading,\n          pokemonList = _this$state.pokemonList;\n    console.log(pokemonList); // get current image index\n\n    const index = this.state.currentItemIndex;\n    let firstThreeItems = pokemonList.slice(index, index + 3);\n\n    if (firstThreeItems.length < 3) {\n      firstThreeItems = firstThreeItems.concat(this.state.pokemonList.slice(0, 3 - firstThreeItems.length));\n    }\n\n    if (!fetched) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"...Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, firstThreeItems.map((item, index) => React.createElement(Pokemon, {\n        key: item.name,\n        id: index + 1,\n        pokemon: pokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.prevSlide,\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Previous\")), React.createElement(\"div\", {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.nextSlide,\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Next\"))));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Vikas\\webstorm\\pokeapi-carousel\\src\\Carousel.js"],"names":["React","Component","Pokemon","Carousel","constructor","props","prevSlide","lastIndex","state","items","length","resetIndex","currentItemIndex","index","setState","nextSlide","pokemonList","fetched","loading","componentDidMount","fetch","then","res","json","response","results","render","console","log","firstThreeItems","slice","concat","map","item","name","pokemon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Pokemon } from './Pokemon';\r\n\r\nexport class Carousel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentItemIndex: 0,\r\n            pokemonList : [],\r\n            fetched : false,\r\n            loading : false\r\n        }\r\n    }\r\n\r\n    prevSlide = () => {\r\n        // find the index of the last image in the array\r\n        const lastIndex = this.state.items.length - 1;\r\n        // check if we need to start over from the last index again\r\n        const resetIndex = this.state.currentItemIndex === 0;\r\n        const index = resetIndex ? lastIndex : this.state.currentItemIndex - 3;\r\n        // assign the logical index to currentItemIndex that will use in render method\r\n        this.setState({\r\n            currentItemIndex: index\r\n        })\r\n    }\r\n\r\n    nextSlide = () => {\r\n        // find the index of the last image in the array\r\n        const lastIndex = this.state.pokemonList.length - 1;\r\n        // check if we need to start over from the first index\r\n        const resetIndex = this.state.currentItemIndex === lastIndex;\r\n        const index = resetIndex ? 0 : this.state.currentItemIndex + 3;\r\n        // assign the logical index to currentItemIndex that will use in render method\r\n        this.setState({\r\n            currentItemIndex: index\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('http://pokeapi.co/api/v2/pokemon?limit=51').then(res=>res.json())\r\n            .then(response=>{\r\n                this.setState({\r\n                    pokemonList : response.results,\r\n                    loading : true,\r\n                    fetched : true\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {fetched, loading, pokemonList} = this.state;\r\n\r\n        console.log(pokemonList);\r\n\r\n        // get current image index\r\n        const index = this.state.currentItemIndex;\r\n        let firstThreeItems = pokemonList.slice(index, index + 3);\r\n\r\n        if (firstThreeItems.length < 3) {\r\n            firstThreeItems = firstThreeItems.concat(this.state.pokemonList.slice(0, 3 - firstThreeItems.length))\r\n        }\r\n\r\n        if(!fetched) {\r\n            return (\r\n                <div>...Loading</div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='container'>\r\n                    <div className=\"card-columns\">\r\n                        {firstThreeItems.map((item, index) => <Pokemon key={item.name} id={index+1} pokemon={pokemon}/>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"row d-flex\">\r\n                        <div className=\"mr-auto\">\r\n                            <button onClick={this.prevSlide} className=\"btn btn-success\">Previous</button>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <button onClick={this.nextSlide} className=\"btn btn-success\">Next</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}